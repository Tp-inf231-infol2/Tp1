DOSSIER ALGORITHMIQUE : Somme de matrices

       *Problème : Calculer la somme de deux matrices A et B .

       *Principe : On parcourt les deux matrices en additionnant les elements en utilisant deux boucles imbriquees.

      *Dictionnaire de données 

Noms des variables	 Types	 Description
  T:Tableau d’entiers (int [])	
  A:première matrice 
  B:Deuxième matrice
  C:Matrice résultante
  n:Entiers ( int )	 Nombres de lignes
  m:Nombres de colonnes
  j:Index des colonnes dans la boucle


* Algorithme :


#include <stdio.h>

int main() {
int i, j, n, m;

printf("Entrez le nombre de lignes de vos matrices : ");
scanf("%d", &n);
printf("Entrez le nombre de colonnes de vos matrices : ");
scanf("%d", &m);

int A[n][m], B[n][m], C[n][m];
printf("Remplissage de la matrice A (%d x %d):\n", n, m);
for (i = 0; i < n; i++) {
for (j = 0; j < m; j++) {
printf("A[%d][%d] = ", i+1, j+1);
scanf("%d", &A[i][j]);
}
}
printf("Remplissage de la matrice B (%d x %d):\n", n, m);
for (i = 0; i < n; i++) {
for (j = 0; j < m; j++) {
printf("B[%d][%d] = ", i+1, j+1);
scanf("%d", &B[i][j]);
}
}
for (i = 0; i < n; i++) {
for (j = 0; j < m; j++) {
C[i][j] = A[i][j] + B[i][j];
}
}
printf("La somme des matrices A et B est :\n");
for (i = 0; i < n; i++) {
for (j = 0; j < m; j++) {
printf("%d ", C[i][j]);
}
printf("\n");
}

return 0;
}

      * Complexité

       -Espace : 3(n*m)+4
       -Temps : n*m